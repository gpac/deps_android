#!/bin/bash
set -x
echo -e "\033[32m Note: if you have problem using this script read the README in  trunk/gpac/build/android \033[0m"

if [ -z "$1" ]
then
  echo "$1 : You must give as first argument the directory path of the NDK"
  exit 1
fi

export PATH="$1:$PATH"

cd `dirname $0`

echo "Compiling FFMPEG for Android..."
./build_ffmpeg-kit.sh || exit 1


echo "Making extra_lib dir for android ..."
mkdir -p ../../lib/android
cd ../../lib/android
LIBPATH=$(pwd)

mkdir -p $LIBPATH/armeabi
mkdir -p $LIBPATH/armeabi-v7a
# mkdir -p $LIBPATH/arm64-v8a
mkdir -p $LIBPATH/x86

cd armeabi/
rm -f *.so
cd ../armeabi-v7a
rm -f *.so
# cd ../arm64-v8a
# rm -f *.so
cd ../x86
rm -f *.so

cd ../../../build/android/jni
echo "Building extra libs for GPAC Android..."
mkdir libcaption 2> /dev/null
cp -f ../../../libcaption/src/eia608_from_utf8.c.cached libcaption/eia608_from_utf8.c
ndk-build
if [ $? != 0 ] ; then
	exit 1
fi

cd ..
echo "Building nghttp2 for Android..."
./build_nghttp2.sh $1 || exit 1


echo "Building openssl for Android..."
./build_openssl.sh $1 || exit 1

echo "Building mpegh for Android..."
./build_mpegh.sh $1 || exit 1



cd libs/
echo "Copying extra libs for GPAC Android to extra_lib dir ... "
for i in $(find . -name '*.so' -or -name '*.a')
do
	echo -n "$i..."
	cp "$i" "$LIBPATH/$i" || exit 1
	echo " done"
done
